#!/bin/bash
set -eu

######################################
# cross-platform clipboard operation
######################################

THIS="$(basename $0)"
USAGE="$THIS [copy|paste|test]

Example:

    # Copy \"fooooo\"
    $ echo fooooo | $THIS copy

    # Paste
    $ $THIS paste
    fooooo

    # Is this supported platform?
    $ $THIS test; echo \$?
"

main() {
  local platform cmd tests

  if [[ "$#" -eq 0 ]]; then
    abort "$USAGE"
  fi

  if wsl_test; then
    platform=wsl
  elif [[ "$OSTYPE" =~ 'linux'  ]]; then
    platform=linux
  elif [[ "$OSTYPE" =~ 'darwin' ]]; then
    # Mac OS X
    platform=darwin
  else
    abort "Not supported platform"
  fi

  case $1 in
    copy|c ) cmd=copy;;
    paste|p ) cmd=paste;;
    test|t ) cmd=test;;
    * ) abort "Unknown command: $1";;
  esac

  "${platform}_${cmd}"
}

linux_copy() {
  require_command xsel

  if [[ -z "$DISPLAY" ]]; then
    abort "Require X Window System"
  fi

  xsel --input --clipboard
}

linux_paste() {
  require_command xsel

  if [[ -z "${DISPLAY:-}" ]]; then
    abort "Require X Window System"
  fi

  xsel --output --clipboard
}

linux_test() {
  require_command xsel

  if [[ -z "${DISPLAY:-}" ]]; then
    abort "Require X Window System"
  fi
}

darwin_copy() {
  require_command pbcopy
  if [[ -n "${TMUX:-}" ]]; then
      reattach-to-user-namespace pbcopy
  else
      pbcopy
  fi
}

darwin_paste() {
  require_command pbpaste
  if [[ -n "${TMUX:-}" ]]; then
      reattach-to-user-namespace pbpaste
  else
      pbpaste
  fi
}

darwin_test() {
  require_command pbpaste pbcopy
}

wsl_copy() {
  require_command clip.exe
  clip.exe
}

wsl_paste() {
  require_command powershell.exe
  powershell.exe Get-Clipboard
}

wsl_test() {
  require_command clip.exe powershell.exe
}

require_command() {
  local error cmd
  error=0
  for cmd in "$@"; do
    if ! which "$cmd" &>/dev/null; then
      echo "Require command: $cmd" >&2
      error=1
    fi
  done
  if [[ "$error" = 1 ]]; then
    return 1
  fi
}

abort() {
  echo "$@" >&2
  return 1
}

main "$@"
